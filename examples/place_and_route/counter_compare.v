/* Generated by Yosys 0.20 (git sha1 4fcb95ed087, gcc 12.2.0 -march=x86-64 -mtune=generic -O2 -fno-plt -fexceptions -fstack-clash-protection -fcf-protection -fPIC -Os) */

(* hdlname = "\\counter_compare" *)
(* top =  1  *)
(* src = "debug_behavioral.v:3.1-11.10" *)
module counter_compare(clk, finished);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  (* force_downto = 32'd1 *)
  (* src = "debug_behavioral.v:7.18-7.27|/usr/bin/../share/yosys/techmap.v:270.23-270.24" *)
  wire [31:0] _10_;
  (* force_downto = 32'd1 *)
  (* src = "debug_behavioral.v:7.18-7.27|/usr/bin/../share/yosys/techmap.v:270.26-270.27" *)
  (* unused_bits = "5" *)
  wire [31:0] _11_;
  (* src = "debug_behavioral.v:3.31-3.34" *)
  input clk;
  wire clk;
  (* src = "debug_behavioral.v:4.29-4.34" *)
  wire [4:0] count;
  (* src = "debug_behavioral.v:3.43-3.51" *)
  output finished;
  wire finished;
  not_gate _12_ (
    .I(count[0]),
    .O(_10_[0])
  );
  nor_gate _13_ (
    .A(count[0]),
    .B(count[1]),
    .O(_00_)
  );
  or_gate _14_ (
    .A(count[2]),
    .B(count[3]),
    .O(_01_)
  );
  nor_gate _15_ (
    .A(count[4]),
    .B(_01_),
    .O(_02_)
  );
  and_gate _16_ (
    .A(_00_),
    .B(_02_),
    .O(finished)
  );
  and_gate _17_ (
    .A(count[0]),
    .B(count[1]),
    .O(_03_)
  );
  nor_gate _18_ (
    .A(_00_),
    .B(_03_),
    .O(_11_[1])
  );
  and_gate _19_ (
    .A(count[2]),
    .B(_03_),
    .O(_04_)
  );
  nor_gate _20_ (
    .A(count[2]),
    .B(_03_),
    .O(_05_)
  );
  nor_gate _21_ (
    .A(_04_),
    .B(_05_),
    .O(_11_[2])
  );
  and_gate _22_ (
    .A(count[3]),
    .B(_04_),
    .O(_06_)
  );
  nor_gate _23_ (
    .A(count[3]),
    .B(_04_),
    .O(_07_)
  );
  nor_gate _24_ (
    .A(_06_),
    .B(_07_),
    .O(_11_[3])
  );
  or_gate _25_ (
    .A(count[4]),
    .B(_06_),
    .O(_08_)
  );
  nand_gate _26_ (
    .A(count[4]),
    .B(_06_),
    .O(_09_)
  );
  and_gate _27_ (
    .A(_08_),
    .B(_09_),
    .O(_11_[4])
  );
  (* src = "debug_behavioral.v:6.5-8.8" *)
  dffpq _28_ (
    .CLK(clk),
    .D(_10_[0]),
    .Q(count[0])
  );
  (* src = "debug_behavioral.v:6.5-8.8" *)
  dffpq _29_ (
    .CLK(clk),
    .D(_11_[1]),
    .Q(count[1])
  );
  (* src = "debug_behavioral.v:6.5-8.8" *)
  dffpq _30_ (
    .CLK(clk),
    .D(_11_[2]),
    .Q(count[2])
  );
  (* src = "debug_behavioral.v:6.5-8.8" *)
  dffpq _31_ (
    .CLK(clk),
    .D(_11_[3]),
    .Q(count[3])
  );
  (* src = "debug_behavioral.v:6.5-8.8" *)
  dffpq _32_ (
    .CLK(clk),
    .D(_11_[4]),
    .Q(count[4])
  );
  assign _10_[31:5] = 27'h0000000;
  assign _10_[5] = 1;
  assign _10_[4:1] = count[4:1];
  assign _11_[31:6] = 26'h0000000;
  assign _11_[0] = _10_[0];
endmodule
