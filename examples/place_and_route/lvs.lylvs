<?xml version="1.0" encoding="utf-8"?>
<klayout-macro>
 <description/>
 <version/>
 <category>lvs</category>
 <prolog/>
 <epilog/>
 <doc/>
 <autorun>false</autorun>
 <autorun-early>false</autorun-early>
 <shortcut/>
 <show-in-menu>true</show-in-menu>
 <group-name>lvs_scripts</group-name>
 <menu-path>tools_menu.lvs.end</menu-path>
 <interpreter>dsl</interpreter>
 <dsl-interpreter-name>lvs-dsl-xml</dsl-interpreter-name>
 <text>
# Read about LVS scripts in the User Manual in "Layout vs. Schematic (LVS)"

# Try this sample script with this layout:
#   https://github.com/KLayout/klayout/tree/master/samples/lvs/ringo.gds
# and this schematic:
#   https://github.com/KLayout/klayout/tree/master/samples/lvs/schematic.cir

# Reference schematic (if not absolute: path relative to original layout)
schematic("openPCells.cir")

target_netlist("openPCells_extracted.cir", write_spice, "Extracted by Klayout")

# Tip: you can also use:
#   schematic(source.path.sub(/\.(oas|gds)/, ".cir"))
# to derive the schematic name from the layout file's name 
# by substituting .oas or .gsd with .cir.

# Enable hierarchical mode
deep

# Produce LVS report
report_lvs

# -------------------------------------------------------------------
# Layers

# Drawing layers
active      = input(1, 0)
pwell       = input(2, 0)
nwell       = input(3, 0)
pplus       = input(4, 0)
nplus       = input(5, 0)
poly        = input(6, 0)
contact     = input(7, 0)
metal1      = input(8, 0)   # includes labels
via1        = input(9, 0)
metal2      = input(10, 0)  # includes labels
via2        = input(11, 0)  
metal3      = input(12, 0)  # includes labels
via3        = input(13, 0) 
metal4      = input(14, 0)  # includes labels

# Bulk layer for terminal provisioning
bulk        = polygon_layer

# Computed layers
active_in_nwell       = active &amp; nwell
pactive               = active_in_nwell &amp; pplus
pgate                 = pactive &amp; poly
psd                   = pactive - pgate

active_outside_nwell  = active - nwell
nactive               = active_outside_nwell &amp; nplus
ngate                 = nactive &amp; poly
nsd                   = nactive - ngate

# -------------------------------------------------------------------
# Device extraction

# PMOS transistor device extraction
extract_devices(mos4("slvtpfet"), { "SD" =&gt; psd, "G" =&gt; pgate, "W" =&gt; nwell, 
                                "tS" =&gt; psd, "tD" =&gt; psd, "tG" =&gt; poly, "tW" =&gt; nwell })

# NMOS transistor device extraction
extract_devices(mos4("slvtnfet"), { "SD" =&gt; nsd, "G" =&gt; ngate, "W" =&gt; bulk, 
                                "tS" =&gt; nsd, "tD" =&gt; nsd, "tG" =&gt; poly, "tW" =&gt; bulk })

# -------------------------------------------------------------------
# Connectivity

# Inter-layer
connect(psd,        contact)
connect(nsd,        contact)
connect(poly,       contact)
connect(contact,    metal1)
connect(metal1,     via1)
connect(via1,       metal2)
connect(metal2,     via2)
connect(via2,       metal3)
connect(metal3,     via3)
connect(via3,       metal4)

# Global
connect_global(bulk, "SUBSTRATE")
connect_global(nwell, "NWELL")


# -------------------------------------------------------------------
# Netlist and compare

# Netlist normalization
netlist.simplify

# Hierarchy alignment (flatten out unmatched cells)
#align

# Netlist vs. netlist
compare
</text>
</klayout-macro>
